{
    "$schema": "http://json-schema.org/schema#",
    "$comment": "IIIF basic types",
    "$defs": {
        "id": {
            "type": "string",
            "format": "uri",
            "pattern": "^http.*$",
            "title": "Id must be presesnt and must be a URI"
        },
        "lngString": {
            "$id": "#lngString",
            "title": "Language string, must have a language and value must be an array.",
            "type": "object",
            "patternProperties": {
                "^[a-zA-Z-][a-zA-Z-]*$": {
                    "type": "array",
                    "items": { "type": "string"}
                },
                "^none$": {
                    "type": "array",
                    "items": { "type": "string"}
                }
            },
            "additionalProperties": false
        },
        "keyValueString": {
            "$id": "#keyValueString",
            "type": "object",
            "properties": {
                "label": {"$ref": "#/$defs/lngString" },
                "value": {"$ref": "#/$defs/lngString" }
            },
            "required": ["label", "value"]
        },
        "BCP47": {
            "anyOf": [
                {
                    "type":"string",
                    "pattern": "^[a-zA-Z-][a-zA-Z-]*$"
                },
                {
                    "type":"string",
                    "pattern": "^none$"
                }
            ]
        },
        "format": {
            "type": "string",
            "pattern": "^[a-z][a-z]*/.*$"
        },
        "class": {
            "title": "Classes MUST have an id and type property and MAY have a label.",
            "type": "object",
            "properties": {
                "id": { "$ref": "#/$defs/id" },
                "type": { "type": "string" },
                "label": { "$ref": "#/$defs/lngString" }
            },
            "required": ["id", "type"]
        },
        "duration": {
            "type": "number",
            "minimum": 0
        },
        "external": {
            "type": "array",
            "items": {
                "allOf": [
                    { "$ref": "#/$defs/class" },
                    {
                        "type": "object",
                        "properties": {
                            "format": { "$ref": "#/$defs/format" },
                            "profile": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        }
    },

    "$comment": "IIIF Classes",
    "properties": {
        "metadata": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/keyValueString"
            }
        },
        "homepage": {
            "type": "array",
            "items": {
                "allOf": [
                    { "$ref": "#/$defs/class" },
                    {
                        "type": "object",
                        "properties": {
                            "format": { "$ref": "#/$defs/format" },
                            "language": {
                                "type": "array",
                                "items": { "$ref": "#/$defs/BCP47" }
                            }
                        }
                    }
                ]
            }
        },
        "seeAlso": {
            "$ref": "#/$defs/external"
        },
        "partOf": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/class"
            }
        },
        "choice": {
            "type": "object",
            "properties":{
                "type": {
                    "type": "string",
                    "const": "Choice"
                },
                "items":{
                    "type": "array"
                }
            },
            "required": ["type", "items"]
        },
        "resource": {
            "oneOf": [
                {
                    "title": "Annotation bodies MUST have an id and type property.",
                    "type": "object",
                    "properties": {
                        "id": { "$ref": "#/$defs/id" },
                        "type": {
                            "type": "string"
                        },
                        "height": {
                            "type": "integer"
                        },
                        "width": {
                            "type": "integer"
                        },
                        "duration": {
                            "$ref": "#/$defs/duration"
                        },
                        "language": { "type": "string"},
                        "service": { "$ref": "#/properties/service" },
                        "format": { "$ref": "#/$defs/format" },
                        "label": {"$ref": "#/$defs/lngString" }
                    },
                    "required": ["id", "type"]
                },
                {
                    "title": "Annotation bodies which are TextualBody MUST have an type and value property.",
                    "type": "object",
                    "properties": {
                        "id": { "$ref": "#/$defs/id" },
                        "type": {
                            "type": "string",
                            "pattern": "^TextualBody$"
                        },
                        "value": { "type": "string" },
                        "format": { "$ref": "#/$defs/format" },
                        "language": { "type": "string"}
                    },
                    "required": ["value", "type"]
                }
            ]
        },
        "imgSvr": {
            "allOf": [
                { "$ref": "#/properties/service" },
                {
                    "properties": {
                        "profile": { "type": "string" },
                        "@id": { "$ref": "#/$defs/id" },
                        "@type": { "type": "string" }
                    }
                }
            ]
        },
        "service": {
            "type": "array",
            "items": {
                "oneOf": [
                    {
                        "allOf": [
                            { "$ref": "#/$defs/class" },
                            {
                                "type": "object",
                                "properties": {
                                    "profile": { "type": "string" },
                                    "service": { "$ref": "#/properties/service" }
                                }
                            }
                        ]
                    },
                    {
                        "type": "object",
                        "properties": {
                            "@id": { "$ref": "#/$defs/id" },
                            "@type": { "type": "string" },
                            "profile": { "type": "string" },
                            "service": { "$ref": "#/properties/service" }
                        },
                        "required": ["@id", "@type"]
                    }
                ]
            }
        },
        "rights": {
            "title": "Rights URI isn't from either Creative Commons or RightsStatements.org. Both require http links.",
            "oneOf": [
                {
                    "type": "string",
                    "format": "uri",
                    "pattern": "http://creativecommons.org/licenses/.*"
                },
                {
                    "type": "string",
                    "format": "uri",
                    "pattern": "http://creativecommons.org/publicdomain/mark/.*"
                },
                {
                    "type": "string",
                    "format": "uri",
                    "pattern": "http://rightsstatements.org/vocab/.*"
                }
            ]
        },
        "navDate": {
            "type": "string",
            "format": "date-time"
        },
        "viewingDirection": {
            "anyOf": [
                {
                    "type": "string",
                    "pattern": "^left-to-right$"
                },
                {
                    "type": "string",
                    "pattern": "^right-to-left$"
                },
                {
                    "type": "string",
                    "pattern": "^top-to-bottom$"
                },
                {
                    "type": "string",
                    "pattern": "^bottom-to-top$"
                }
            ]
        },
        "behavior": {
            "type": "array",
            "items": {
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^auto-advance$"
                    },
                    {
                        "type": "string",
                        "pattern": "^no-auto-advance$"
                    },
                    {
                        "type": "string",
                        "pattern": "^repeat$"
                    },
                    {
                        "type": "string",
                        "pattern": "^no-repeat$"
                    },
                    {
                        "type": "string",
                        "pattern": "^unordered$"
                    },
                    {
                        "type": "string",
                        "pattern": "^individuals$"
                    },
                    {
                        "type": "string",
                        "pattern": "^continuous$"
                    },
                    {
                        "type": "string",
                        "pattern": "^paged$"
                    },
                    {
                        "type": "string",
                        "pattern": "^facing-pages$"
                    },
                    {
                        "type": "string",
                        "pattern": "^non-paged$"
                    },
                    {
                        "type": "string",
                        "pattern": "^multi-part$"
                    },
                    {
                        "type": "string",
                        "pattern": "^together$"
                    },
                    {
                        "type": "string",
                        "pattern": "^sequence$"
                    },
                    {
                        "type": "string",
                        "pattern": "^thumbnail-nav$"
                    },
                    {
                        "type": "string",
                        "pattern": "^no-nav$"
                    },
                    {
                        "type": "string",
                        "pattern": "^hidden$"
                    }
                ]
            }
        },
        "provider": {
            "type": "array",
            "items": {
                "allOf": [
                    { "$ref": "#/$defs/class" },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "pattern": "^Agent$"
                            },
                            "homepage": { "$ref": "#/properties/homepage" },
                            "logo": {
                                "type": "array",
                                "items": { "$ref": "#/properties/resource" }
                            },
                            "seeAlso": { "$ref": "#/properties/seeAlso" }
                        }
                    }
                ]
            }
        },
        "collection": {
            "allOf": [
                { "$ref": "#/$defs/class" },
                {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "pattern": "^Collection",
                            "title": "Are you validating a collection?",
                            "description":"If you are validating a manifest, you may get this error if there are errors in the manifest. The validator first validates it as a manifest and if that fails it will try and validate it using the other types."
                        },
                        "metadata": { "$ref": "#/properties/metadata" },
                        "summary": { "$ref": "#/$defs/lngString" },
                        "requiredStatement": { "$ref": "#/$defs/keyValueString" },
                        "rights": { "$ref": "#/properties/rights" },
                        "navDate": { "$ref": "#/properties/navDate" },
                        "provider": { "$ref": "#/properties/provider" },
                        "seeAlso": { "$ref": "#/properties/seeAlso" },
                        "thumbnail": {
                            "type": "array",
                            "items": { "$ref": "#/properties/resource" }
                        },
                        "homepage": { "$ref": "#/properties/homepage" },
                        "behavior": { "$ref": "#/properties/behavior" },
                        "partOf": { "$ref": "#/properties/partOf" },
                        "items": {
                            "type": "array",
                            "items": {
                              "oneOf": [
                                { "$ref": "#/properties/manifest" },
                                { "$ref": "#/properties/collection" }
                              ]
                            }
                        },
                        "annotations": {
                            "type": "array",
                            "items": {
                                "$ref": "#/properties/annotationPage"
                            }
                        }
                    },
                    "required": ["id", "type", "label"]
                }
            ]
        },
        "manifest": {
            "allOf": [
                { "$ref": "#/$defs/class" },
                {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "@context": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uri",
                                        "pattern": "^http.*$"
                                    }
                                },
                                {
                                    "type": "string",
                                    "const": "http://iiif.io/api/presentation/3/context.json"
                                }
                            ]
                        },
                        "id": {},
                        "label": {},
                        "type": {
                            "type": "string",
                            "pattern": "^Manifest"
                        },
                        "metadata": { "$ref": "#/properties/metadata" },
                        "summary": { "$ref": "#/$defs/lngString" },
                        "requiredStatement": { "$ref": "#/$defs/keyValueString" },
                        "rendering": { "$ref": "#/$defs/external" },
                        "service": { "$ref": "#/properties/service" },
                        "viewingDirection": { "$ref": "#/properties/viewingDirection" },
                        "rights": { "$ref": "#/properties/rights" },
                        "start": {},
                        "logo": {
                            "type": "array",
                            "items": { "$ref": "#/properties/resource" }
                        },
                        "navDate": { "$ref": "#/properties/navDate" },
                        "provider": { "$ref": "#/properties/provider" },
                        "seeAlso": { "$ref": "#/properties/seeAlso" },
                        "thumbnail": {
                            "type": "array",
                            "items": { "$ref": "#/properties/resource" }
                        },
                        "homepage": { "$ref": "#/properties/homepage" },
                        "behavior": { "$ref": "#/properties/behavior" },
                        "partOf": { "$ref": "#/properties/partOf" },
                        "items": {
                            "type": "array",
                            "items": {
                                "$ref": "#/properties/canvas"
                            }
                        },
                        "structures": {
                            "type": "array",
                            "items": {
                                "$ref": "#/properties/range"
                            }
                        },
                        "annotations": {
                            "type": "array",
                            "items": {
                                "$ref": "#/properties/annotationPage"
                            }
                        }
                    }
                }
            ]
        },
        "canvas": {
            "allOf": [
                { "$ref": "#/$defs/class" },
                {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "pattern": "^Canvas$"
                        },
                        "height": {
                            "type": "integer"
                        },
                        "width": {
                            "type": "integer"
                        },
                        "duration": {
                            "$ref": "#/$defs/duration"
                        },
                        "metadata": { "$ref": "#/properties/metadata" },
                        "summary": { "$ref": "#/$defs/lngString" },
                        "requiredStatement": { "$ref": "#/$defs/keyValueString" },
                        "rights": { "$ref": "#/properties/rights" },
                        "navDate": { "$ref": "#/properties/navDate" },
                        "provider": { "$ref": "#/properties/provider" },
                        "seeAlso": { "$ref": "#/properties/seeAlso" },
                        "thumbnail": {
                            "type": "array",
                            "items": { "$ref": "#/properties/resource" }
                        },
                        "homepage": { "$ref": "#/properties/homepage" },
                        "behavior": { "$ref": "#/properties/behavior" },
                        "partOf": { "$ref": "#/properties/partOf" },
                        "items": {
                            "type": "array",
                            "items": {
                                "$ref": "#/properties/annotationPage"
                            }
                        },
                        "annotations": {
                            "type": "array",
                            "items": {
                                "$ref": "#/properties/annotationPage"
                            }
                        }
                    },
                    "anyOf":[
                        { "required": ["width"] },
                        { "required": ["height"] },
                        { "required": ["duration"] }
                    ],
                    "dependencies": {
                        "width": ["height"],
                        "height": ["width"]
                    }
                }
            ]
        },
        "annotationCollection": {
            "allOf": [
                { "$ref": "#/$defs/class" },
                {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "pattern": "^AnnotationCollection$"
                        },
                        "partOf": { "$ref": "#/properties/partOf" },
                        "next": { "$ref": "#/properties/annotationPage" },
                        "first": { "$ref": "#/properties/annotationPage" },
                        "last": { "$ref": "#/properties/annotationPage" },
                        "items": {
                            "type": "array",
                            "items": {
                                "$ref": "#/properties/annotation"
                            }
                        }
                    }
                }
            ]
        },
        "annotationPage": {
            "allOf": [
                { "$ref": "#/$defs/class" },
                {
                    "type": "object",
                    "properties": {
                        "id": { "$ref": "#/$defs/id" },
                        "@context": {},
                        "type": {
                            "type": "string",
                            "pattern": "^AnnotationPage$"
                        },
                        "items": {
                            "type": "array",
                            "items": {
                                "$ref": "#/properties/annotation"
                            }
                        }
                    },
                    "additionalProperties": false
                }
            ]
        },
        "annotation": {
            "allOf": [
                { "$ref": "#/$defs/class" },
                {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "pattern": "^Annotation$"
                        },
                        "motivation": {
                            "oneOf": [
                                { "type": "string" },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            ]
                        },
                        "body": {
                            "oneOf": [
                                {
                                    "$ref": "#/properties/resource"
                                },
                                {
                                    "allOf":[
                                        { "$ref": "#/properties/choice" },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {"$ref": "#/properties/resource"}
                                                }
                                            },
                                            "required": ["items"]
                                        }
                                    ]
                                }
                            ]
                        },
                        "target": {
                            "oneOf": [
                                { "$ref": "#/properties/annoTarget" },
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/properties/annoTarget"
                                    }
                                }
                            ]
                        }
                    },
                    "required": ["target", "type"]
                }
            ]
        },
        "annoTarget": {
            "oneOf": [
                {
                    "type": "string",
                    "format": "uri",
                    "pattern": "^http.*$"
                },
                {
                    "$ref": "#/properties/specificResource"
                }
            ]
        },
        "specificResource": {
            "type": "object",
            "properties": {
                "id": { "$ref": "#/$defs/id" },
                "type": {
                    "type": "string",
                    "pattern": "^SpecificResource$"
                },
                "format": { "$ref": "#/$defs/format" },
                "accessibility": { "type": "string"},
                "source": { "$ref": "#/$defs/id" },
                "selector": { "$ref": "#/properties/annoSelector" }
            },
            "required": ["source", "selector"]
        },
        "annoSelector": {
            "oneOf": [
                {
                    "type": "string",
                    "format": "uri",
                    "pattern": "^http.*$"
                },
                {
                    "type": "object",
                    "properties": {
                        "type": { "type": "string" },
                        "t": { "$ref": "#/$defs/duration" }
                    },
                    "required": ["type"]
                }
            ]
        },
        "range": {
            "allOf": [
                { "$ref": "#/$defs/class" },
                {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "pattern": "^Range$"
                        },
                        "supplementary": { "$ref": "#/properties/annotationCollection" },
                        "items": {
                            "type": "array",
                            "items": {
                                "oneOf": [
                                    {
                                        "$ref": "#/properties/specificResource"
                                    },
                                    {
                                        "allOf": [
                                            { "$ref": "#/$defs/class" },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "pattern": "^Canvas$"
                                                    }
                                                }

                                            }
                                        ]
                                    },
                                    {
                                        "$ref": "#/properties/range"
                                    }
                                ]
                            }
                        }
                    }
                }
            ]
        }
    },
    "$id": "http://iiif.io/api/presentation/3/schema.json" ,
    "allOf": [
        { "$ref": "#/$defs/class" },
        {
          "oneOf": [
            { "$ref": "#/properties/manifest" },
            { "$ref": "#/properties/collection" },
            { "$ref": "#/properties/annotationPage" }
          ]
        }
    ]
}
